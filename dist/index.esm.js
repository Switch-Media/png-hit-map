const t="undefined"!=typeof window&&"undefined"!=typeof document,e="undefined"!=typeof process&&!!process.versions&&!!process.versions.node;async function o(o,i={}){const r=i.gridPercent||1,n=!1!==i.base64Output;let a,l,f;if(t){let e=o;"string"==typeof o&&(e=await function(e){if(!t)throw new Error("Image loading requires a browser environment");return new Promise(((t,o)=>{const i=new Image;i.onload=()=>t(i),i.onerror=()=>o(new Error(`Failed to load image at ${e}`)),i.src=e}))}(o));const i=document.createElement("canvas"),r=i.getContext("2d");if(!r)throw new Error("Failed to get canvas context");i.width=e.width,i.height=e.height,r.drawImage(e,0,0);const n=r.getImageData(0,0,i.width,i.height);f=new Uint8Array(n.data.buffer),a=i.width,l=i.height}else{if(!e)throw new Error("Unsupported environment for createHitMap");{const{PNG:t}=await import("pngjs"),e=await import("fs");let i;if("string"==typeof o)i=await e.promises.readFile(o);else{if(!(o instanceof Uint8Array||Buffer.isBuffer(o)))throw new Error("Image must be a file path or Buffer in Node.js");i=Buffer.from(o)}const r=t.sync.read(i);a=r.width,l=r.height,f=r.data}}const h=Math.max(1,Math.floor(r/100*a)),s=Math.max(1,Math.floor(r/100*l)),g=Math.ceil(a/h),c=Math.ceil(l/s),w=new Uint8Array(g*c);for(let t=0;t<l;t++)for(let e=0;e<a;e++){if(f[4*(t*a+e)+3]>0){const o=Math.floor(e/h);w[Math.floor(t/s)*g+o]=1}}t&&window._pngHitMapVisualization&&(window._pngHitMapMetadata={width:a,height:l,gridSizeX:h,gridSizeY:s,gridWidth:g,gridHeight:c});const d=function(t,e){const o=[];let i=t[0],r=1;for(let e=1;e<t.length;e++)t[e]===i?r++:(o.push(r),i=t[e],r=1);o.push(r);let n=2;for(const t of o)n+=t<255?1:5;const a=new ArrayBuffer(n),l=new DataView(a);l.setUint8(0,Math.round(e)),l.setUint8(1,t[0]);let f=2;for(const t of o)t<255?(l.setUint8(f,t),f+=1):(l.setUint8(f,255),f+=1,l.setUint32(f,t,!0),f+=4);return a}(w,r);return n?function(e){if(t){const t=new Uint8Array(e);let o="";for(let e=0;e<t.byteLength;e++)o+=String.fromCharCode(t[e]);return btoa(o)}return Buffer.from(e).toString("base64")}(d):d}function i(e,o,i,r){if(!r||!r.width||!r.height)throw new Error("Image dimensions are required for hit detection. Please provide imageInfo parameter with width and height.");let n;n="string"==typeof e?function(e){if(t){const t=atob(e),o=new Uint8Array(t.length);for(let e=0;e<t.length;e++)o[e]=t.charCodeAt(e);return o.buffer}return Buffer.from(e,"base64").buffer}(e):e;const a=new DataView(n).getUint8(0),l=r.width,f=r.height,h=Math.max(1,Math.floor(a/100*l)),s=Math.max(1,Math.floor(a/100*f)),g=Math.ceil(l/h),c=Math.floor(o/100*l),w=Math.floor(i/100*f),d=Math.floor(c/h);return function(t,e){const o=new DataView(t),i=o.getUint8(1);let r=i,n=0,a=2;for(;n<=e;){let t=o.getUint8(a);if(a+=1,255===t&&(t=o.getUint32(a,!0),a+=4),n+t>e)return 1===r;n+=t,r=0===r?1:0}return!1}(n,Math.floor(w/s)*g+d)}const r="undefined"!=typeof window&&"undefined"!=typeof document;function n(t){if(r){const e=atob(t),o=new Uint8Array(e.length);for(let t=0;t<e.length;t++)o[t]=e.charCodeAt(t);return o.buffer}return Buffer.from(t,"base64").buffer}var a=Object.freeze({__proto__:null,analyzeRLEData:function(t){let e;e="string"==typeof t?n(t):t;const o=new DataView(e),i=o.getUint8(0),r=o.getUint8(1);let a=0,l=0,f=0,h=r,s=2;for(;s<e.byteLength;){let t;255===o.getUint8(s)?(s+=1,t=o.getUint32(s,!0),s+=4):(t=o.getUint8(s),s+=1),a++,l+=t,1===h&&(f+=t),h=1-h}return{gridPercent:i,startValue:r,totalRuns:a,totalCells:l,hitCells:f,compressionRatio:e.byteLength/l}},createVisualizationData:function(t,e,o){const i=[];for(let r=0;r<o;r++){let o=[],n=0,a=t[r*e];for(let i=1;i<=e;i++)if(i===e||t[r*e+i]!==a){const l={value:a,count:i-n,row:r,startX:n,endX:i-1};o.push(l),i<e&&(a=t[r*e+i],n=i)}i.push(o)}return i},formatRLEHex:function(t){let e;e="string"==typeof t?n(t):t;const o=new Uint8Array(e);let i="";for(let t=0;t<o.length;t++){i+=o[t].toString(16).padStart(2,"0")+" ",(t+1)%16==0&&(i+="\n")}return i},getVisualizationData:()=>r&&window._pngHitMapMetadata||null,storeVisualizationData:(t,e,o)=>{r&&(window._pngHitMapMetadata={width:e,height:o,grid:t})},visualizeGrid:function(t,e,o,i={}){if(!r)throw new Error("Visualization requires a browser environment with Canvas support");const a=t.getContext("2d");if(!a)throw new Error("Failed to get canvas context");let l;l="string"==typeof e?n(e):e;const f=new DataView(l),h=f.getUint8(0),s=o.width,g=o.height,c=Math.max(1,Math.floor(h/100*s)),w=Math.max(1,Math.floor(h/100*g)),d=Math.ceil(s/c);t.width===s&&t.height===g||(t.width=s,t.height=g),a.clearRect(0,0,t.width,t.height);let u=0,p=f.getUint8(1),M=2;for(a.fillStyle=i.fillColor||"rgba(0, 255, 0, 0.2)";M<l.byteLength;){let t;if(255===f.getUint8(M)?(M+=1,t=f.getUint32(M,!0),M+=4):(t=f.getUint8(M),M+=1),1===p)for(let e=0;e<t;e++){const t=u+e,o=Math.floor(t/d),i=t%d;a.fillRect(i*c,o*w,c,w)}u+=t,p=1-p}if(i.showGrid){a.strokeStyle=i.gridColor||"rgba(255, 0, 0, 0.5)",a.lineWidth=i.lineWidth||1;for(let t=0;t<=s;t+=c)a.beginPath(),a.moveTo(t,0),a.lineTo(t,g),a.stroke();for(let t=0;t<=g;t+=w)a.beginPath(),a.moveTo(0,t),a.lineTo(s,t),a.stroke()}},visualizeGridDirect:function(t,e,o,a={}){if(!r)throw new Error("Visualization requires a browser environment with Canvas support");const l=t.getContext("2d");if(!l)throw new Error("Failed to get canvas context");let f;l.clearRect(0,0,t.width,t.height),f="string"==typeof e?n(e):e;const h=new DataView(f).getUint8(0),s=Math.max(1,Math.floor(h/100*o.width)),g=Math.max(1,Math.floor(h/100*o.height)),c=Math.ceil(o.width/s),w=Math.ceil(o.height/g),d=t.width/o.width,u=t.height/o.height;if(a.showGrid){l.strokeStyle=a.gridColor||"rgba(0, 0, 0, 0.3)",l.lineWidth=1;for(let e=0;e<=c;e++){const o=Math.floor(e*s*d);l.beginPath(),l.moveTo(o,0),l.lineTo(o,t.height),l.stroke()}for(let e=0;e<=w;e++){const o=Math.floor(e*g*u);l.beginPath(),l.moveTo(0,o),l.lineTo(t.width,o),l.stroke()}}if(a.fillColor){l.fillStyle=a.fillColor||"rgba(0, 255, 0, 0.4)";for(let t=0;t<w;t++)for(let r=0;r<c;r++){const n=Math.floor(r*s*d),a=Math.floor(t*g*u),f=Math.ceil(s*d),h=Math.ceil(g*u);i(e,r*s/o.width*100,t*g/o.height*100,o)&&l.fillRect(n,a,f,h)}}},visualizeRLERuns:function(t,e,o={}){if(!r)throw new Error("Visualization requires a browser environment with Canvas support");const i=t.getContext("2d");if(!i)throw new Error("Failed to get canvas context");let a;a="string"==typeof e?n(e):e;const l=new DataView(a);l.getUint8(0);const f=l.getUint8(1);i.clearRect(0,0,t.width,t.height);let h=f,s=2,g=0;for(;s<a.byteLength;){let t;255===l.getUint8(s)?(s+=1,t=l.getUint32(s,!0),s+=4):(t=l.getUint8(s),s+=1),i.fillStyle=1===h?o.fillColor||"rgba(0, 255, 0, 0.4)":"rgba(255, 0, 0, 0.1)",i.fillRect(0,g,2*t,20),i.fillStyle="black",i.font="12px monospace",i.fillText(t.toString(),2*t+5,g+15),g+=25,h=1-h}}}),l={createHitMap:o,testHit:i};export{o as createHitMap,l as default,i as testHit,a as visualTools};
//# sourceMappingURL=index.esm.js.map
